apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: parallel-cronjob-workflow-cron
spec:
  schedule: "* * * * *"
  workflowSpec:
    serviceAccountName: workflows-sa
    entrypoint: parallel-with-param
    arguments:
      parameters:
      - name: items
        value: '[{"account": "", "service": "mad-service", "region": "ap-northeast-2", "role": "mad-project"}, {"account": "", "service": "mad-service", "region": "ap-northeast-2", "role": "mad-project"}]' # test json 필요.
    templates:
    - name: parallel-with-param
      inputs:
        parameters:
        - name: items
      steps:
      - - name: echo-item
          template: whalesay
          arguments:
            parameters:
            - name: account
              value: "{{item.account}}"
            - name: service
              value: "{{item.service}}"
            - name: region
              value: "{{item.region}}"
            - name: role
              value: "{{item.role}}"
          withParam: "{{inputs.parameters.items}}"
      - - name: generate
          template: get-parameters-and-generate-jobs
    - name: get-parameters-and-generate-jobs
      script:
        image: 750876142122.dkr.ecr.ap-northeast-2.amazonaws.com/pyhon:latest # Replace with the docker image you prepared
    - name: whalesay
      inputs:
        parameters:
        - name: account
        - name: service
        - name: region
        - name: role
      container:
        image: 750876142122.dkr.ecr.ap-northeast-2.amazonaws.com/describe-ec2-resource:ce48e0475d74f9736eb5476526294ee9615749eb # replace with your bash image
        command: [sh, -c]
        args: ["export account={{inputs.parameters.account}}; export service={{inputs.parameters.service}}; export region={{inputs.parameters.region}}; export role={{inputs.parameters.role}}; sh Describe_Resource.sh"]
